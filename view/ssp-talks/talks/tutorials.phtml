<div class="page-header">
    <h1>Tutorials</h1>
</div>
<div id="block-mine">
    <p style="text-align: justify;">
        Below is a full listing of the 3-hour in-depth SunshinePHP tutorials to be presented on February 6th, 2014 the day prior to the official conference.<br /><br />

        NOTE: In order to attend these 3-hour in-depth tutorials an additional ticket for the tutorial day must be purchased from the <a href="http://sunshinephp.com/register" title="Speaker: SunshinePHP Registration">Registration page</a>.
    </p>

    <div style="padding-left: 30px;">
        <div id="continous-integration-id-php">
            <hr />

            <h2>Continuous Integration in PHP</h2>

            <a href="/speakers#keith-casey" title="Speaker: Keith Casey">Keith Casey</a><br /><br />

            As we move to the cloud, scaling, deployment, and operations in general become a fundamentally different kind of problem. Deploying an update via ftp or even resync simply doesn't work anymore. Continuous Integration and eventually Continuous Deployment are the only approaches that keeps the code and our projects moving in one direction. This presentation will cover the major considerations in putting together your own PHP-based Continuous Integration environment and porting your first application.<br /><br />
        </div>

        <div id="zf2-modules-workshop">
            <hr />

            <h2>ZF2 Modules Workshop</h2>

            <a href="/speakers#evan-coury" title="Speaker: Evan Coury">Evan Coury</a><br /><br />

            One of the highly anticipated new features of Zend Framework 2 is the introduction of an all new and powerful approach to modules. This new module system has been designed with flexibility, simplicity, performance, and reusability in mind.<br /><br />

            In this interactive workshop, Evan Coury, the author of the new ZF2 module system, will explain everything ZF2 modules have to offer, while covering the process and strategies for building effective, reusable ZF2 modules leveraging fundamental ZF2 concepts such as services and events. By the end of the workshop, youâ€™ll have the basic knowledge and examples necessary to begin building great modular applications with Zend Framework 2.<br /><br />
        </div>

        <!--<div id="clean-application-development">
            <hr />

            <h2>Clean Application Development</h2>

            <a href="/speakers#adam-culp" title="Speaker: Adam Culp">Adam Culp</a><br /><br />

            No matter what level of development we are at in our careers we all face a daily battle to write good code for ourselves and others, deliver finished applications fast to satisfy business, and ensure everything is properly tested to prevent end-user fails. In this session we will discuss what clean application development is, and how it can help us win those battles. The talk will provide practical and usable examples to take with you, integrate into your workflow, and continue to grow into good habits. (Topics: Version control, refactoring, coding standards, frameworks, architecture, automation, time management, and more.)<br /><br />
        </div>-->
        
        <div id="code-review-for-security">
            <hr />

            <h2>Code Review for Security</h2>

            <a href="/speakers#anthony-ferrara" title="Speaker: Anthony Ferrara">Anthony Ferrara</a><br /><br />

            Imagine the day where you get an email from your CEO: "Our site has been hacked! Millions of user records have been leaked! And we're being sued!"... Unfortunately, that situation appears to be quite common place in the modern world. In the past year alone LinkedIn, Sony, Zappos, Twitter, Apple, Yahoo and LastFM (and a lot more) have compromised, leaking over 100 million user records. How has this become common place? Developers traditionally haven't focused on security (that's someone else's problem, right?)... Wrong! Security is everyone's job!<br /><br />

            Come and learn more about how to identify and fix security issues! In this workshop, we'll cover the most dangerous and prevalent security vulnerabilities in PHP applications today. We'll look at how those vulnerabilities work under the hood, and how to prevent them. Then, we'll spend time reviewing actual code with actual vulnerabilities. Once we've identified a potential vulnerability, you will actually execute an attack against it! By the end of the workshop, you should be able to identify insecure code and fix it!<br /><br />

            Who is the target audience of this workshop?<br />
            * Any developer who has preformed code-review before<br />
            * Any developer who wants to understand security better<br /><br />

            How experienced do I need to be?<br />
            * If you understand how to read code, you have enough experience to attend this workshop!<br /><br />

            Tutorial requirements:<br />
            * A laptop<br /><br /><br />

            A cursory understanding of the OWASP Top 10 will be very helpful<br /><br />
        </div>

        <div id="design-patterns-workshop">
            <hr />

            <h2>Design Patterns Workshop</h2>

            <a href="/speakers#brandon-savage" title="Speaker: Brandon Savage">Brandon Savage</a><br /><br />

            In 1994, the Gang of Four changed the world with their book, Design Patterns. Yet nearly 20 years later, we're still struggling with design patterns. How can this be?<br /><br />

            The answer is that design patterns are hard. Designing reusable applications is the most challenging thing a developer can do. But there's good news: you CAN master design patterns and use them to your advantage! This workshop will show you how.<br /><br />

            Learn how you're already using design patterns in your own code, how to identify design patterns in the code of others, how to use eight of the most common design patterns (with live coding demonstrations!) and the ways in which design patterns can change your applications!<br /><br />
        </div>

        <div id="resting-with-symfony2">
            <hr />

            <h2>RESTing with Symfony2</h2>

            <a href="/speakers#lukas-kahwe-smith" title="Speaker: Lukas Kahwe Smith">Lukas Kahwe Smith</a><br /><br />

            Based on concrete examples, you will learn how to build a REST API using Symfony2 and many third-party libraries in an efficient manner. We will dive into each layer including routing, controllers, serialization, versioning, testing, the security layer and even the documentation (this list is not exhaustive). Overall, this talk describes the state of REST in the Symfony2 world. However as there is unfortunately a lot of confusion about the theory of REST, we will start off first looking at the core ideas of REST independently of Symfony2. The code examples will be based on the Symfony2 REST Edition (https://github.com/gimler/symfony-rest-edition), so its recommended for tutorial attendees to have installed it before the tutorial.<br /><br />

        </div>

        <div id="foundations-of-php">
            <hr />

            <h2>Foundations of PHP</h2>

            <a href="/speakers#beth-tucker-long" title="Speaker: Beth Tucker Long">Beth Tucker Long</a><br /><br />

            A building works better with a solid foundation beneath it. The same is true for PHP. Whether you are new to programming or are just looking for a refresher, this session will take you through the basics. Beth Tucker Long will cover strings and arrays, conditions and loops, sessions and cookies, form validation and security, and writing your own functions. Best of all, Beth won't just talk about these concepts, she'll go through actual code, so you can see them in action. Bring your laptop, follow along, and you'll have a working application when you leave. Questions are welcomed!<br /><br />
        </div>

        <div id="workshop-improving-qa-and-php-development-projects">
            <hr />

            <h2>Workshop: Improving QA and PHP Development Projects</h2>

            <a href="/speakers#michelangelo-van-dam" title="Speaker: Michelangelo Van Dam">Michelangelo Van Dam</a><br /><br />

            Everyone talks about raising the bar on quality of code, but it's always hard to start implementing it when you have no clue where to start. With this talk I'm shooing that there are many levels developers can improve themselves by using the right tools. In this talk I'll go over each tool with examples how to use them against your codebase. A must attend talk for every developer that wants to scale up their quality.<br /><br />

            Most PHP developers deploy code that does what the customer requested but they don't have a clue about the quality of the product they deliver. Without this knowledge, maintenance can be a hell and very expensive.<br /><br />

            In this workshop I cover unit testing, code measuring, performance testing, debugging and profiling and give tips and tricks how to continue after this workshop.<br /><br />
        </div>

        <div id="behat-bdd-and-selenium-in-your-app">
            <hr />

            <h2>Behat, BDD and Selenium in your App</h2>

            <a href="/speakers#ryan-weaver" title="Speaker: Ryan Weaver">Ryan Weaver</a><br /><br />

            Testing our applications is something we all do. Ahem, rather, it's something we all *wish* we did. In this workshop, we'll get to work hands-on with Behat: a behavior-driven-development library that allows you to write functional tests against your application just by writing human-readable sentences/scenarios. We'll also learn about its sister-app Mink, which lets you run these tests in a real browser (via Selenium2).<br /><br />

            If you've heard the buzz around Behat and want to try it, or if you're not happy with the functional tests in your app, then let's get hands-on with Behat.<br /><br />
        </div>
    </div>
    <hr />
</div>