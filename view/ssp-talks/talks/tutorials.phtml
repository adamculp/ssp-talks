<div class="page-header">
    <h1>Tutorials</h1>
</div>
<div id="block-mine">
    <p style="text-align: justify;">
        Below is a full listing of the 3-hour in-depth SunshinePHP tutorials to be presented on February 4th the day prior to the official conference.<br /><br />

        NOTE: In order to attend these 3-hour in-depth tutorials an additional ticket for the tutorial day must be purchased from the <a href="http://sunshinephp.com/register" title="Speaker: SunshinePHP Registration">Registration page</a>.
    </p>

    <div style="padding-left: 30px;">

        <div id="adventures-in-laravel-5" style="text-align: justify;">
            <hr />

            <h2>Adventures in Laravel 5</h2>

            <a href="/speakers#joe-ferguson" title="Speaker: Joe Ferguson">Joe Ferguson</a><br /><br />
    
            With the release of Laravel 5 there are a lot of new toys to play with. We'll cover the new features and how to start using them in your applications. We'll be covering the new directory structure, changes in blade templates, commands and events, form requests, helpers, route caching and middlewares, controller method injection, migrating from Laravel 4, and more! We will also discuss changes to Illuminate packages and the new Elixir, Socialite, and Contracts packages.<br /><br />
        </div>

        <div id="become-an-open-source-contributor" style="text-align: justify;">
            <hr />

            <h2>Become an Open Source Contributor</h2>

            <a href="/speakers#beth-tucker-long" title="Speaker: Beth Tucker Long">Beth Tucker Long</a><br /><br />

            Are you interested in contributing to an open source project but aren't sure where to get started? Have you tried to contribute but gave up trying to figure out the contribution process? This tutorial will walk you through the contribution process and the tools you need to make contributions to popular open source projects. Bring your laptop, because we won't just be talking about contributions, you will actually make a contribution during this tutorial. Come to the talk a developer; leave as an open source contributor!<br /><br />
        </div>

        <div id="demystifying-object-oriented-programming" style="text-align: justify;">
            <hr />

            <h2>Demystifying Object-Oriented Programming</h2>

            <a href="/speakers#alena-holligan" title="Speaker: Alena Holligan">Alena Holligan</a><br /><br />

            Abstraction, Encapsulation, Polymorphism, and Interfaces: whether you’ve been programming in PHP for years or are just starting your journey, these terms can be overwhelming even on a good day. Variables, conditionals, those all make sense. But this whole Object-Oriented thing is WAY more complicated. Not only that, people that already understand it act like it’s so easy and they talk right over the simple questions and never explain the basic concepts in a way that actually makes sense. In this session we’ll take you through real life examples of Object-Oriented terminology in a way that will make sense of all the mumbo jumbo and allow you to utilizing OOP immediately.<br /><br />
        </div>

        <div id="docker-for-developers" style="text-align: justify;">
            <hr />

            <h2>Docker for Developers</h2>

            <a href="/speakers#chris-tankersley" title="Speaker: Chris Tankersley">Chris Tankersley</a><br /><br />

            Thanks to tools like vagrant, puppet/chef, and Platform as a Service services like Heroku, developers are extremely used to being able to spin up a development environment that is the same every time. What if we could go a step further and make sure our development environment is not only using the same software, but 100% configured and set up like production. Docker will let us do that, and so much more. We'll look at what Docker is, why you should look into using it, and all of the features that developers can take advantage of.<br /><br />
        </div>

        <div id="magento-2-modules-are-easy" style="text-align: justify;">
            <hr />

            <h2>Magento 2 Modules are Easy!</h2>

            <a href="/speakers#ben-marks" title="Speaker: Ben Marks">Ben Marks</a><br /><br />

            Magento 2 is here, and it's time to dive in! Composer, PSRs, and a full test suite make Magento 2 easy & enjoyable to learn. The goal of this tutorial is to introduce the framework concepts of Magento 2 as a foundation for customizing and extending the application. There will also be plenty of eCommerce anecdotes to go around. Show up, participate, and walk out with both a working Magento 2 environment & module!<br /><br />

            This talk is suitable for developers with or without Magento 1 experience. Thorough familiarity with at least one PHP MVC framework is recommended.<br /><br />
        </div>

        <div id="manage-your-content-with-elasticsearch" style="text-align: justify;">
            <hr />

            <h2>Manage Your Content with Elasticsearch</h2>

            <a href="/speakers#samantha-quinones" title="Speaker: Samantha Quiñones">Samantha Quiñones</a><br /><br />

            ElasticSearch is one of the most powerful search and data management platforms available today, but it’s not known for its simplicity. In this hands-on workshop, you’ll learn how to get the most out of this very capable platform. We’ll explore querying and filtering, creating efficient indices, custom views, clustering strategies and dive into ElasticSearch’s powerful suite of aggregations. This introduction will get you ready to build complex search and statistical applications that make your content and data even more valuable.<br /><br />
        </div>

        <div id="test-create-secure-repeat" style="text-align: justify;">
            <hr />

            <h2>Test, Create, Secure, Repeat</h2>

            <a href="/speakers#michelangelo-van-dam" title="Speaker: Michelangelo van Dam">Michelangelo van Dam</a><br /><br />

            If you build web applications you now have a huge responsibility: everything must be tested and secured. But how do you test and secure legacy applications or how do you get started with a new project using test-driven techniques to maximise quality and security without investing too much time in it.<br /><br />

            In this workshop we will start with a clean project and build a simple catalogue application using test-driven and security-hardened techniques to achieve our goal. Once we have achieved our goal, we're going to apply the same on a legacy application.<br /><br />
        </div>

        <div id="zf2-done-properly" style="text-align: justify;">
            <hr />

            <h2>ZF2 Done Properly</h2>

            <a href="/speakers#gary-hockin" title="Speaker: Gary Hockin">Gary Hockin</a><br /><br />

            Getting started with Zend Framework 2 is relatively easy. But once you have a basic CRUD application up and running where do you go from there? Knowing how you should build your application with maintainability and scalability in mind can be very daunting. But there are a number of hard and fast rules that you can use to help to factor you application into something that is functional, maintainable, and performant.<br /><br />

            In this tutorial we will take a pre-build ZF2 application straight from GitHub, and apply some simple(ish) rules to make a basic ZF2 application run in a more modern way. Say goodbye to getServiceLocator in your controllers, and say hello to the full power of dependency injection, event listeners and framework plugins.<br /><br />
        </div>

    </div>
    <hr />
</div>