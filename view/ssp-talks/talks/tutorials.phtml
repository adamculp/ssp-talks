<div class="page-header">
    <h1>Tutorials</h1>
</div>
<div id="block-mine">
    <p style="text-align: justify;">
        Below is a full listing of the 3-hour in-depth SunshinePHP tutorials to be presented on February 7th the day prior to the official conference.<br /><br />

        NOTE: In order to attend these 3-hour in-depth tutorials an additional ticket for the tutorial day must be purchased from the <a href="http://sunshinephp.com/register" title="Speaker: SunshinePHP Registration">Registration page</a>.
    </p>

    <div style="padding-left: 30px;">

        <!--<div id="tutorial_tag" style="text-align: justify;">
            <hr />

            <h2>tutorial_title</h2>

            <a href="/speakers#speaker_tag" title="Speaker: speaker_name">speaker_name</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large beginner">Beg</div>&nbsp;<div class="tag large security">Security</div>

            <br /><br />

            tutorial_abstract<br /><br />

            <a href="#" title="Preparation Instructions">Preparation Instructions</a><br /><br />
        </div>-->

        <div id="the-mysql-document-store" style="text-align: justify;">
            <hr />

            <h2>The MySQL Document Store</h2>

            <a href="/speakers#dave-stokes" title="Speaker: Dave Stokes">Dave Stokes</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large beginner">Beg</div>&nbsp;<div class="tag large database">DB</div>

            <br /><br />

            The MySQL Document Store is a JSON based NoSQL database does not require the use of Structured Query Language (SQL) to interact with the database. No more embedding ugly strings of SQL in your beautiful PHP code. The new API calls (via the MySQL X Devapi PECL extension) follow modern programming design for all the CRUD functions of the document store. Each document has a payload of 1GB (compared to MongoDB's 16mb) and runs on proven, reliable MySQL technology. And if you have older relational data, the MySQL Document Store lets you access them plus the new document store data at the same time. This is a hands on workshop (please load MySQL 8 on your laptop!) for those wishing to switch over to the MySQL Document Store with plenty of programming examples.<br /><br />

            <a href="https://gist.github.com/mysqlmentor/70304e9773577515c3c6106fc6550382" title="Preparation Instructions" target="_blank">Preparation Instructions</a><br /><br />
        </div>

        <div id="start-testing-your-php-code" style="text-align: justify;">
            <hr />

            <h2>Start testing your PHP code</h2>

            <a href="/speakers#jason-mccreary" title="Speaker: Jason McCreary">Jason McCreary</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large beginner">Beg</div>&nbsp;<div class="tag large testing">Testing</div>

            <br /><br />

            In this workshop we’ll cover different ways to test your PHP code. Our focus will be the tools and writing tests - we won’t get caught up in all the testing dogma. Instead, we’ll create a foundation in tools like PHPUnit, Mockery, and Codeception so you can make the decisions about what testing tools and strategies work best for you and your code. So if you’re looking to start testing your PHP code, or learn other PHP testing tools, this workshop is for you.<br /><br />

            <a href="https://gist.github.com/jasonmccreary/460ed942f124374a1b17f0fdb31fc1b3" title="Preparation Instructions" target="_blank">Preparation Instructions</a><br /><br />
        </div>

        <div id="rest-api-workshop" style="text-align: justify;">
            <hr />

            <h2>REST API Workshop</h2>

            <a href="/speakers#mike-stowe" title="Speaker: Mike Stowe">Mike Stowe</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large beginner">Beg</div>&nbsp;<div class="tag large api">api</div>

            <br /><br />

            Create beautiful RESTful APIs designed to meet your customers needs while also being agile enough to meet the demands of ever changing platforms and businesses. Along with learning about the different types of API formats, you’ll learn how to take a user first approach, take advantage of modern design techniques, and leave with a strong understanding of API design and development – including HATEOAS/ hypermedia usage.<br /><br />

            <a href="https://gist.github.com/mikestowe/58916a4f4fb00691ec293aea17746c85" title="Preparation Instructions" target="_blank">Preparation Instructions</a><br /><br />
        </div>

        <div id="practical-object-oriented-design-principles" style="text-align: justify;">
            <hr />

            <h2>Practical Object-Oriented Design Principles</h2>

            <a href="/speakers#brandon-savage" title="Speaker: Brandon Savage">Brandon Savage</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large beginner">Beg</div>&nbsp;<div class="tag large oop">OOP</div>

            <br /><br />

            Figuring out the best way to apply object-oriented design principles to your code is a challenge for even the most experienced developers. In this tutorial we’ll dive deeply into exactly how to apply object-oriented design principles to the software we’re writing, including an in-depth analysis of the SOLID patterns and practices.<br /><br />

            <a href="#" title="Preparation Instructions" target="_blank">Preparation Instructions (None needed)</a><br /><br />
        </div>

        <div id="php-code-review" style="text-align: justify;">
            <hr />

            <h2>PHP Code review</h2>

            <a href="/speakers#damien-seguy" title="Speaker: Damien Seguy">Damien Seguy</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large intermediate">Int</div>&nbsp;<div class="tag large development">Dev</div>

            <br /><br />

            To improve your code base, you run an audit. Now, with so many diagnostics, the situation appears to be overwhelming. If you have a mere million lines of code, it may display thousands of errors, in various orders. And with that, the market leaves no time to reduce technical debt before the next feature: we’ll do it when pressure gets lighter, right? WRONG!<br /><br />

            Code quality starts with a daily review. Learn how to navigate in the results of code audits that actually find more issues than you want. During this workshop, we’ll check PHP classic traps, architecture errors, security vulnerabilities and logical bugs. We’ll see how to detect those bugs, how they happen, and how to prepare a fix (or not). By the end, you’ll be able to set up your own coding reference, the one that reflect your style of coding in your projects.<br /><br />

            <a href="#" title="Preparation Instructions" target="_blank">Preparation Instructions (None needed)</a><br /><br />
        </div>

        <div id="pentesting-for-developers" style="text-align: justify;">
            <hr />

            <h2>Pentesting for Developers</h2>

            <a href="/speakers#chris-cornutt" title="Speaker: Chris Cornutt">Chris Cornutt</a>
            <div class="tag large tutorial">Tutorial</div>&nbsp;<div class="tag large beginner">Beg</div>&nbsp;<div class="tag large security">Security</div>

            <br /><br />

            While secure development practices are an important part of keeping your application and its data protected, you also have to prove your defenses are working. Developers are used to things like unit testing and even functional testing but some feel out of their depth when it comes to security testing. Effective security testing, or pentesting, is easier than you might think.<br /><br />

            We’ll start by introducing some of the techniques and tools you can use to test your own applications and finish with a contest to see how much you’ve learned.<br /><br />

            <a href="#" title="Preparation Instructions" target="_blank">Preparation Instructions (None needed)</a><br /><br />
        </div>

    </div>
    <hr />
</div>