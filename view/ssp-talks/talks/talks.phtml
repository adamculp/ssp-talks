<div class="page-header">
    <h1>Talks</h1>
</div>
<div id="block-mine">
    <p style="text-align: justify;">
        Below is a full listing of 50 minute talks to be presented at SunshinePHP. Our selection committee did a wonderful job of selecting a nice variety of talk topics by some of the best speakers.  We hope there is something for everyone developing with PHP.<br /><br />
    
        NOTE: Attending these 50 minute talks on Friday and Saturday February 5th and 6th requires the purchase of a normal conference ticket on the <a href="http://sunshinephp.com/register" title="Speaker: SunshinePHP Registration">Registration page</a>.
    </p>
    
    <div style="padding-left: 30px;">

        <div id="be-a-bold-coder" style="text-align: justify;">
            <hr />
        
            <h2>Be a Bold Coder</h2>
        
            <a href="/speakers#beth-tucker-long" title="Speaker: Beth Tucker Long">Beth Tucker Long</a><br /><br />
    
            Do you cringe when you have to show someone else your code? Have you ever complained about terribly written code only to discover it was yours from six months ago? Coding is a constantly evolving field. How can you keep up? Learn what standards are out there to help you keep your code clean, what tools can help you proof your code, and where to find information on best practices so you can stay current and boldly share your code with others.<br /><br />
        </div>

        <div id="regex-makes-me-want-to" style="text-align: justify;">
            <hr />

            <h2>/Regex makes me want to (weep|give up|(╯°□°)╯︵ ┻━┻).?/i</h2>

            <a href="/speakers#brett-florio" title="Speaker: Brett Florio">Brett Florio</a><br /><br />

            REGEX! Love it or hate it, sometimes you actually need it. And when that time comes, there’s no reason to be afraid or to ask help from that one weirdo on your team who actually loves regular expressions. (I’m that weirdo, fwiw.)<br /><br />

            This session is geared towards beginning and intermediate regex users, and will cover the following topics using practical examples that you might encounter in your own projects.<br />

            <ul>
                <li>What is regex? How’s it work? A brief history.</li>
                <li>Syntax, special characters, character classes</li>
                <li>Grouping, capturing, and common gotchas</li>
                <li>More advanced topics like: Backreferences; Passive groups; Lookarounds (my favorite)</li>
                <li>PHP pattern matching and replacements</li>
                <li>Regex in JavaScript, and js-specific limitations</li>
            </ul>
            <br /><br />
        </div>

        <div id="30-skills-to-master-to-become-a-senior-software-engineer" style="text-align: justify;">
            <hr />

            <h2>30 Skills to Master to Become a Senior Software Engineer</h2>

            <a href="/speakers#sean-coates" title="Speaker: Sean Coates">Sean Coates</a><br /><br />

            While one can create a very simple web page using a minimum of skills, it takes a lot more to become a senior-level software engineer. Knowing HTML and PHP is not enough. But once you've mastered these 30 skills, you will find yourself in demand from the top organizations. Senior-level software engineers command impressive salaries and enjoy excellent job security. So it's highly recommended you learn these 30 skills to level up your mastery of software engineering.<br /><br />
        </div>

        <div id="acceptance-functional-testing-with-codeception" style="text-align: justify;">
            <hr />

            <h2>Acceptance &amp; Functional Testing with Codeception</h2>

            <a href="/speakers#joe-ferguson" title="Speaker: Joe Ferguson">Joe Ferguson</a><br /><br />

            Go beyond unit testing and use Codeception to not only unit test your application, but also test your forms, links, navigation, API calls, AJAX request handling, and more. Codeception has support for many modern frameworks, Selenium WebDriver integration, and BDD style readable tests. Codeception makes it easy to write tests to check every change of the front end and back end of your application. Codeception also does an amazing job at unit testing, it is a complete testing framework.<br /><br />
        </div>

        <div id="adventures-in-symfony2-building-an-mmo-rpg" style="text-align: justify;">
            <hr />

            <h2>Adventures in Symfony2 - Building an MMO-RPG</h2>

            <a href="/speakers#margaret-staples" title="Speaker: Margaret Staples">Margaret Staples</a><br /><br />

            Ride along on a tour of my latest adventure! I will unpack my process for turning design ideas into game mechanics, talk about the tools that were used (including Symfony2 and other open source goodies), examine major roadblocks and how they were overcome, give a postmortem on key implementation decisions, and share the highlights of what I learned along the way.<br /><br />
        </div>

        <div id="apis-to-your-brain" style="text-align: justify;">
            <hr />

            <h2>APIs to your brain</h2>

            <a href="/speakers#ibis-arrastia" title="Speaker: Ibis Arrastia">Ibis Arrastia</a><br /><br />

            Brain-Computer interfaces have made a significant advancement in the field of neuroscience, connecting the brain to computer systems that can store, track and measure brainwaves and other biodata. This science allows data processing and computer software to play a key role in medical treatments and potentially even have the ability to heal people! Brain-Computer Interfaces are currently being used to treat Alzheimers, Epilepsy, Parkinsons, ALS, ADHD, Sleep deprivation, and a number of other neurological disorders. Learn how 3D printable and open source systems, combined with REST APIs collect and disperse data to bring the field of neuroscience out of the labs and into the homes of mind enthusiasts everywhere.<br /><br />
        </div>

        <div id="applying-the-4-rules-of-simple-design" style="text-align: justify;">
            <hr />

            <h2>Applying the 4 Rules of Simple Design</h2>

            <a href="/speakers#adam-wathan" title="Speaker: Adam Wathan">Adam Wathan</a><br /><br />

            You're starting a new project and this time you want to do it right. Everything's going to be test-first, your domain model is going to be perfectly portable, and your framework will be nothing but a mere detail.<br /><br />

            But as soon as your fingers hit the keyboard you're paralyzed.<br /><br />

            Should I use a command for this? How can I test this piece without hitting the database? Should these two things happen in the same place or should I fire an event?<br /><br />

            This talk is about taking a step back and thinking about what really makes your code good. Using Kent Beck's four simple rules, I'll teach you how to get unstuck and stop worrying about the future by embracing emergent design and writing great code now.<br /><br />
        </div>

        <div id="asynchronous-php" style="text-align: justify;">
            <hr />

            <h2>Asynchronous PHP</h2>

            <a href="/speakers#christopher-pitt" title="Speaker: Christopher Pitt">Christopher Pitt</a><br /><br />

            PHP has emerged from it’s dark past; just in time to learn from the advances in event-based programming languages/platforms. As a result; there is vast, untapped potential in developing event-based, real-time applications. Utilising emerging open-source projects, like ReactPHP and Ratchet, PHP developers can join the party.<br /><br />
        </div>

        <div id="become-a-rum-runner" style="text-align: justify;">
            <hr />

            <h2>Become a RUM runner!</h2>

            <a href="/speakers#vesna-kovach" title="Speaker: Vesna Kovach">Vesna Kovach</a><br /><br />

            A healthy dash of RUM will reveal myriad answers to your conversion problems. Learn to apply Real User Monitoring to your application so you can find out: - What the performance of your application feels like in real life. - Whether your slowdowns are on the back or front end. Learn how to interpret the Apdex (Application Performance Index) standard. Shop for solutions, or roll your own with the W3C's Nav Timing and Resource Timing APIs.<br /><br />

            Don't get lost in a sea of bewildering statistics -- learn to navigate the numbers to your advantage.<br /><br />
        </div>

        <div id="behat-beyond-the-basics" style="text-align: justify;">
            <hr />

            <h2>Behat: Beyond the Basics</h2>

            <a href="/speakers#jessica-mauerhan" title="Speaker: Jessica Mauerhan">Jessica Mauerhan</a><br /><br />

            Join me for an in-depth look at intermediate to advanced level Behat topics. Thanks to Behat, my company was able to take an application that only functioned about 50% of the time and had almost no forward progress due to bugs and regressions, and make it stable, tested, and are now adding features and releasing at least weekly. Learn from my years of experience in my talk on Behat: Beyond the Basics.<br /><br />
            In this session we will cover:<br />
            - Guidelines to follow for writing accurate and easily understood tests<br />
            - Going from having no automated testing to having a stable product<br />
            - Testing legacy code vs new code<br />
            - Technical specifics:<br />
            - Capturing a screenshot on error<br />
            - Dealing with AJAX in your application<br />
            - Regular Expressions in Behat Contexts<br />
            and more.<br /><br />
        </div>

        <div id="building-real-time-data-pipelines" style="text-align: justify;">
            <hr />

            <h2>Building Real-Time Data Pipelines</h2>

            <a href="/speakers#samantha-quinones" title="Speaker: Samantha Quiñones">Samantha Quiñones</a><br /><br />

            Taking a data-driven approach to application management starts with instrumentation, but storing, analyzing, and distributing that data to the people who need it introduces a unique set of problems. Discover how one of the world’s top digital media platforms handles the massive stream of analytics pouring in from millions of consumer devices. We'll dive into the technologies that allow us to collect, route, store, and find meaning in data at 20 MB/s.<br /><br />
        </div>

        <div id="containers-and-docker-for-the-php-developer" style="text-align: justify;">
            <hr />

            <h2>Containers and Docker for the PHP developer</h2>

            <a href="/speakers#robert-mcfrazier" title="Speaker: Robert McFrazier">Robert McFrazier</a><br /><br />

            In this session we will discuss the basics of containers and how to use Docker, running in a Vagrant VM to allow any PHP developer to create an extremely flexible development environment and also learn more about these powerful technologies. Using a practical example of building a development environment allows you to create something other that a basic “hello world” example while learning about containers<br /><br />
        </div>

        <div id="dont-be-the-last-to-know-strategies-tactics-for-monitoring-your-system-and-services" style="text-align: justify;">
            <hr />

            <h2>Don't be the last to know! Strategies &amp; Tactics for Monitoring Your System and Services</h2>

            <a href="/speakers#elisa-towbis" title="Speaker: Elisa Towbis">Elisa Towbis</a><br /><br />

            When something goes bad - who knows about it first: you or your customers? Whether you are a provider of apis, or a consumer of services from other vendors, being aware of system issues ... before your customers ... is a critical factor to minimizing downtime and keeping business-critical operations running.<br /><br />

            Cloud computing and distributed processing "cloud services" change the way you think about your system. It still starts with CPU, memory and disk - but doesn't end there.<br /><br />

            This talk will focus on finding touch points for monitoring your system and tools that could help you be the first to know!<br /><br />
        </div>

        <div id="exploiting-the-brain-for-fun-profit" style="text-align: justify;">
            <hr />

            <h2>Exploiting the Brain for Fun &amp; Profit</h2>

            <a href="/speakers#alena-holligan" title="Speaker: Alena Holligan">Alena Holligan</a><br /><br />

            Sure, you could improve yourself or promote your project the normal way, with hard work and years of slow, incremental progress. Or you could use some of the brain's built-in cheat codes and just hack your way to success.<br /><br />

            Along with learning, our brains are plagued by a raft of bugs and unwanted features that we have been unable to remove. Use these “features” to your advantage to teach, learn and persuade. Join us in a tour of some of the most amusing bugs and exploits that allow you to play with the interface between our brains and the world.<br /><br />
        </div>

        <div id="feature-flags-are-flawed-lets-make-them-better" style="text-align: justify;">
            <hr />

            <h2>Feature Flags are Flawed: Let's Make Them Better</h2>

            <a href="/speakers#stephen-young" title="Speaker: Stephen Young">Stephen Young</a><br /><br />

            Whether you are familiar with feature flags (or feature toggles, bits, switches, etc), or you've never heard of them, this talk is for you. Traditional feature flags are used to hide unfinished work in a continuous delivery pipeline; code is wrapped in a conditional statement and when everything is done you flip a switch in the database and boom: all of your users get the new experience. This can be very handy, especially if the new code contains bugs that were not discovered until it went into the wild. You can turn off the feature flag, deploy the patches, and then re-enable the flag.<br /><br />

            As convenient as this model is, it has it's drawbacks. Investing in this pattern usually results in your code becoming riddled over time with "If True Then X" condition statements. This increases cyclomatic complexity and could eventually lead to increased technical debt. Additionally, feature flags are very "All or Nothing." Wouldn't it be better if you could roll out new features to your users incrementally? Wouldn't it be better if you could eliminate much of the cognitive load associated with all of those conditions?<br /><br />

            This talk will focus on the basics, benefits, and drawbacks of feature flags before introducing Swivel: a PHP library that improves upon the feature flag concept by segmenting your users into groups and abstracting away the implementation details.<br /><br />
        </div>

        <div id="from-idea-to-prototype-in-50-minutes-with-laravel" style="text-align: justify;">
            <hr />

            <h2>From Idea to Prototype in 50 Minutes with Laravel</h2>

            <a href="/speakers#matt-stauffer" title="Speaker: Matt Stauffer">Matt Stauffer</a><br /><br />

            Most developers can't stop coming up with great ideas for products and packages. But the time and effort it takes to go from great idea to working prototype can often keep us from ever getting started.<br /><br />

            Laravel provides a set of easy-to-use tools that minimize the pain of taking our apps from idea to reality. In this talk we'll take an idea for a simple SaaS startup, spin up a new Laravel project, create a prototype, and get it hosted on Forge and online in no time at all. We'll cover the basics of each piece of the Laravel ecosystem, and touch on frontend and backend development, server management, and rapid application development. By the end of the talk, each attendee will be equipped to take their ideas from first concept to prototype using Laravel, Elixir, Homestead, Forge, and more.<br /><br />
        </div>

        <div id="functional-es6-javascript" style="text-align: justify;">
            <hr />

            <h2>Functional ES6 JavaScript</h2>

            <a href="/speakers#luis-atencio" title="Speaker: Luis Atencio">Luis Atencio</a><br /><br />

            <strong>The Challenge</strong><br />
            Web applications, especially single-page apps, are becoming more popular every day. Client side code has been evolving from quick fixes and one-off tasks into large enterprise-class code bases with asynchronous behavior and events. This triggered a myriad of web frameworks with the aim of reducing the complexity of large JavaScript code bases, yet complex and tangled code is still difficult to control. Added to this is the struggle of writing proper unit tests, which become impossible to do correctly. We've failed to realize that the root cause of complexity is not so much the architecture of our JavaScript code, but the discipline with which we write it.<br /><br />

            <strong>The Solution</strong><br />
            Functional programming is based on the principles of eliminating mutations and side effects, to create applications based entirely on pure functions. Pure functions are much simpler to understand and composed together can create entire programs that are easier to reason about and test. FPallows developer to write elegant, maintainable, and testable code that scales to large enterprise development. Using powerful design patterns called monads, FP can streamline code with asynchronous behavior and events with promises and reactive paradigms, which is one of the most popular causes of complexity in JS applications.<br /><br />

            <strong>Tentative Outline</strong><br />
            This talk uses ES6 JavaScript and covers:<br />
            - Referential transparency and pure functions<br />
            - High-order functions and closures<br />
            - Function currying and composition<br />
            - Monadic design patterns<br />
            - Streamlining asynchronous behavior and generators<br />
            - Simplify event-driven code with a functional reactive approach<br /><br />
        </div>

        <div id="give-me-a-rest" style="text-align: justify;">
            <hr />

            <h2>Give Me a REST!</h2>

            <a href="/speakers#amanda-folson" title="Speaker: Amanda Folson">Amanda Folson</a><br /><br />

            More devices than ever are connected to the Internet these days, and the need and consumption of APIs is growing fast. We'll talk about what an API is (and what it's not), why you might need one, how you might use one, and how to make one that other people will enjoy using.<br /><br />
        </div>

        <div id="growing-your-filesystem" style="text-align: justify;">
            <hr />

            <h2>Growing your filesystem</h2>

            <a href="/speakers#frank-de-jonge" title="Speaker: Frank de Jonge">Frank de Jonge</a><br /><br />

            Managing filesystems can be tricky. When your application grows small problems get amplified, things get messy, order transforms into chaos. Much of this can be prevented by following a couple easy steps. Preparing your application filesystem handling for easy migrations, manageable structures and faster delivery. Let's see how we can take filesystem management to the next level by using a filesystem abstraction layer (Flysystem), and explore some of the benefits it brings.<br /><br />
        </div>

        <div id="http2-the-not-so-new-language-of-the-web" style="text-align: justify;">
            <hr />

            <h2>HTTP/2 The (not so) new Language of the Web</h2>

            <a href="/speakers#adrian-cardenas" title="Speaker: Adrian Cardenas">Adrian Cardenas</a><br /><br />

            HTTP has a new specification (two actually) and has received a major overhaul of some of it's internals. While the protocol itself has not changed much, the transfer mechanism and other underlying systems have been completely re-worked. Adrian will expand on what has and has not changed, how to make the best use of it, and how to transition to the new standard if you need to.<br /><br />
        </div>

        <div id="interoperability-and-php-in-the-edtech-industry" style="text-align: justify;">
            <hr />

            <h2>Interoperability and PHP in the EdTech Industry</h2>

            <a href="/speakers#jeremy-lindblom" title="Speaker: Jeremy Lindblom">Jeremy Lindblom</a><br /><br />

            EdTech is an evolving industry where software developers, in particular, have opportunities to innovate and to improve education for students, teachers, and schools around the world. One big movement in EdTech software is interoperability, which includes adopting open standards like Learning Tools Interoperability (LTI) and creating and consuming RESTful APIs. After this session, you will have an understanding of how some of these EdTech-specific standards work, how APIs and hypermedia assist in interoperability, how to integrate your own software with a Learning Management System (LMS), and where PHP fits in the world of EdTech.<br /><br />
        </div>

        <div id="into-the-zf2-service-manager" style="text-align: justify;">
            <hr />

            <h2>Into the ZF2 Service Manager</h2>

            <a href="/speakers#chris-tankersley" title="Speaker: Chris Tankersley">Chris Tankersley</a><br /><br />

            One of the most prolific parts of Zend Framework 2 is the Service Manager. Its many nooks and crannies dictate much of what happens inside our Zend Framework 2 applications and is incredibly powerful. Let's look into exactly what the Service Manager allows us to do and how we can take advantage of it for cleaner, and faster, code.<br /><br />
        </div>

        <div id="introduction-to-graph-databases-with-neo4j" style="text-align: justify;">
            <hr />

            <h2>Introduction to Graph Databases with Neo4j</h2>

            <a href="/speakers#michael-moussa" title="Speaker: Michael Moussa">Michael Moussa</a><br /><br />

            Graph databases are all the rage these days, but the ideas they’re built upon are hundreds of years old. After a brief look at the history of graph theory and its practical applications in Computer Science, we’ll dive right into Neo4j - the world’s most popular graph database! Learn the differences between a graph database like Neo4j and your traditional RDBMS. See how to model your application’s domain using the new concepts available to you and how to query your graphs using Neo4j’s intuitive query language, Cypher. After this talk, you’ll agree that (Neo4j)-[:IS]->(Awesome) and be excited to use it in your next web application!<br /><br />
        </div>

        <div id="magento-at-2" style="text-align: justify;">
            <hr />

            <h2>Magento at 2</h2>

            <a href="/speakers#ben-marks" title="Speaker: Ben Marks">Ben Marks</a><br /><br />

            SunshinePHP is the first PHP major conference since the release of Magento 2. Magento has long been the most feature-complete framework for commerce with over 200,000 live stores and a rich, open developer ecosystem. Magento 2 brings the features and tech of Magento 1 up to modern PHP standards:<br /><br />

            • adoption of multiple PSRs<br />
            • Composer<br />
            • modern frontend stack<br />
            • AOP<br />
            • GitHub-based collaboration with the core development and documentation teams.<br />
            • And more!<br /><br />

            Whether you've considered, looked at, or worked with Magento in the past, or even if you are just now looking at how to solve tough problems in commerce, this is a "cannot miss" interactive talk full of commerce anecdotes, candor, and probably one or two bad puns.<br /><br />
        </div>

        <div id="microservices-packs-small-plays-big" style="text-align: justify;">
            <hr />

            <h2>Microservices: Packs small, plays BIG!</h2>

            <a href="/speakers#stephan-hochdorfer" title="Speaker: Stephan Hochdörfer">Stephan Hochdörfer</a><br /><br />

            Microservices based architectures look very promising. But what exactly are microservices? Is it just SOA as it was intended to be or maybe something completely different? With this session I`d like to discuss the benefits and trade-offs of an microservices based architecture and give you some insights on why it can make sense to create simple, isolated and collaborating services.<br /><br />
        </div>

        <div id="mysql-server-performance-tuning-101" style="text-align: justify;">
            <hr />

            <h2>MySQL Server Performance Tuning 101</h2>

            <a href="/speakers#ligaya-turmelle" title="Speaker: Ligaya Turmelle">Ligaya Turmelle</a><br /><br />

            Optimizing the queries you send to the database can greatly increase the database's performance, but what do you know about all those strange MySQL variables that can be played with to get even more power from the database? Join me as we go over some of the basics of the various MySQL settings you can twitch, tweak and massage to get the most out of your MySQL server.<br /><br />
        </div>

        <div id="mysqls-json-data-type" style="text-align: justify;">
            <hr />

            <h2>MySQL's JSON Data Type</h2>

            <a href="/speakers#dave-stokes" title="Speaker: Dave Stokes">Dave Stokes</a><br /><br />

            MySQL 5.7 comes with a native JSON data type. Now MySQL will let you store valid JSON documents in your database. But there are some tricks that you need to know before you start dumping your docs into database. This session will cover that data type, the proper use of the accompanying JSON functions, and how to leverage generated columns with your JSON data for indexes, searches. and more.<br /><br />
        </div>

        <div id="navigating-your-git-repository" style="text-align: justify;">
            <hr />

            <h2>Navigating Your Git Repository</h2>

            <a href="/speakers#gemma-anible" title="Speaker: Gemma Anible">Gemma Anible</a><br /><br />

            You can git pull, merge, and even force-push with the best of them, but what’s really going on in that .git folder? What’s a commit, and how does it know where it came from? What does checking out a tag have to do with detaching your head, and why does rebase mess things up so thoroughly?<br /><br />

            In this talk, we’ll get inside individual commits and learn to push them around, then zoom out to the whole repository. Come find out how Git’s glorified game of Connect-the-Dots can improve the development workflow and collaboration opportunities for your whole team!<br /><br />
        </div>

        <div id="pci-compliance-for-php-in-the-hipster-age" style="text-align: justify;">
            <hr />

            <h2>PCI Compliance for PHP in the Hipster Age</h2>

            <a href="/speakers#phillip-jackson" title="Speaker: Phillip Jackson">Phillip Jackson</a><br /><br />

            In a 2009 poll "PCI Compliance" was found to be the most boring two-word combination in the English language. Building applications that stand up to the Machiavellian standards that are PCI compliance is just the beginning. The rest will put you to sleep; and could put you out of business!<br /><br />

            The aim of this talk is to "hipsterify" PCI standards and create application toolkits that make passing PCI a breeze.<br /><br />

            This talk will be exciting, fast paced, and humorous. It won't, however, make PCI fun.<br /><br />
        </div>

        <div id="performance-testing-for-modern-apps" style="text-align: justify;">
            <hr />

            <h2>Performance Testing for Modern Apps</h2>

            <a href="/speakers#dustin-whittle" title="Speaker: Dustin Whittle">Dustin Whittle</a><br /><br />

            The performance of your application affects your business more than you might think. Top engineering organizations think of performance not as a nice-to-have, but as a crucial feature of their product. Unfortunately, most engineering teams do not regularly test the performance and scalability of their infrastructure. Dustin Whittle shares the latest techniques and tools for performance testing modern web and mobile applications. Join this session and learn how to capacity plan and evaluate performance and the scalability of the server-side through Siege, Bees with Machine Guns, and Locust.io. We will dive into modern performance testing on the client-side and how to leverage navigation/resource timing apis and tools like Google PageSpeed and SiteSpeed.io to understand the real world performance of your users. We will cover how HTTP2 and modern browsers change the game for performance optimization with new best practices. Take back an understanding of how to automate performance and load testing and evaluate the impact it has on performance and your business.<br /><br />
        </div>

        <div id="php-identity-and-data-security" style="text-align: justify;">
            <hr />

            <h2>PHP Identity and Data Security</h2>

            <a href="/speakers#jonathan-leblanc" title="Speaker: Jonathan LeBlanc">Jonathan LeBlanc</a><br /><br />

            Jonathan LeBlanc is an Emmy award winning software engineer, author of the O’Reilly book "Programming Social Applications", co-author of the upcoming title “Identity and Data Security for Web Developers”, and the Head of Global Developer Advocacy for Braintree and PayPal.<br /><br />

            Specializing in identity, auth and security, hardware to web interconnectivity, and data mining techniques, as well as open source initiatives around social engagement, Jonathan works on the development of emerging initiatives towards building a more user-centric web.<br /><br />
        </div>

        <div id="smiling-from-the-wrists-down-customer-service-for-developers" style="text-align: justify;">
            <hr />

            <h2>Smiling From the Wrists Down: Customer Service for Developers</h2>

            <a href="/speakers#heather-white" title="Speaker: Heather White">Heather White</a><br /><br />

            As developers and consultants much of your career is spent learning how to properly manage your relationship with managers and clients.  What happens when you take that next step, perhaps as part of starting your own business, and now need to manage customer relations instead?  How is this different from your previous roles and how can you deal with the difficult situations that will arise?  Come learn from first hand experience what to expect, how to answer the question that is meant - not the one is asked, and how to effectively communicate with your customers, while always smiling from the wrists down.<br /><br />
        </div>

        <div id="step-into-debugging" style="text-align: justify;">
            <hr />

            <h2>Step Into Debugging</h2>

            <a href="/speakers#gary-hockin" title="Speaker: Gary Hockin">Gary Hockin</a><br /><br />

            &lt;?php<br />
            die(var_dump($synopsis));<br />

            string(406) "While var_dump driven development is great when your starting, at some point every developer wants more. Step debugging is the answer.<br /><br />

            In this session we'll cover the fundamentals of installing and configuring Xdebug, configuring PhpStorm to listen to Xdebug, and then actually step debugging some scripts to find our problems. Step debugging PHP is an incredibly easy and powerful tool when you know how!"<br /><br />
        </div>

        <div id="symfony-guard-authentication-fun-with-api-token-social-login-jwt-and-more" style="text-align: justify;">
            <hr />

            <h2>Symfony Guard Authentication: Fun with API Token, Social Login, JWT and more</h2>

            <a href="/speakers#ryan-weaver" title="Speaker: Ryan Weaver">Ryan Weaver</a><br /><br />

            There are so many interesting ways to authenticate a user: via an API token, social login, a traditional HTML form or anything else you can dream up.<br /><br />

            But until now, creating a custom authentication system in Symfony has meant a lot of files and a lot of complexity.<br /><br />

            Introducing Guard: a simple, but expandable authentication system built on top of Symfony's security component. Want to authenticate via an API token? Great - that's just one class. Social login? Easy! Have some crazy legacy central authentication system? In this talk, we'll show you how you'd implement any of these in your application today.<br /><br />

            Don't get me wrong - you'll still need to do some work. But finally, the path will be clear and joyful.<br /><br />
        </div>

        <div id="taking-the-web-offline" style="text-align: justify;">
            <hr />

            <h2>Taking the Web Offline</h2>

            <a href="/speakers#steve-grunwell" title="Speaker: Steve Grunwell">Steve Grunwell</a><br /><br />

            The internet is an amazing tool for sharing information with users all over the world, but what happens when "online" isn't a guarantee? This was the question posed after 10up built an web-based product catalog for one of the world's leading water technology providers. With a sales team of hundreds, how could we be sure that the sales materials were always available to the sales team, regardless of internet connectivity?<br /><br />

            This session is a case-study on taking a web application offline, synchronizing JSON data and assets while maintaining a consistent user experience. Attendees will gain insight on the unique challenges of taking an app offline, as well as the technologies available and strategies for keeping data intact and the user experience seamless.<br /><br />
        </div>

        <div id="the-continuous-php-pipeline" style="text-align: justify;">
            <hr />

            <h2>The continuous PHP Pipeline</h2>

            <a href="/speakers#michelangelo-van-dam" title="Speaker: Michelangelo van Dam">Michelangelo van Dam</a><br /><br />

            You've got your tests, your metrics, your database migrations and your system provisioning automated, but how can you deploy everything with a push of a button and not be scared something goes wrong? Welcome to the continuous PHP Pipeline.<br /><br />

            In this talk I take the code, the tests, the metrics and the provisioners and show you how you can have a continuous delivery pipeline setup based on certain criteria you define upfront, your code gets automatically deployed to staging or to production with all the arbitrary tasks along with it.<br /><br />

            Never get stressed again about deployments. Make deployments as easy as committing to your repository and get home on time to enjoy your well deserved weekend.<br /><br />
        </div>

        <div id="the-pattern-to-design-patterns" style="text-align: justify;">
            <hr />

            <h2>The Pattern to Design Patterns</h2>

            <a href="/speakers#chris-russell" title="Speaker: Chris Russell">Chris Russell</a><br /><br />

            Understanding the underlying concept of design patterns is critical to a developer's long term success in working with them. Many of the resources that the average developer is exposed to focus on how to implement specific patterns instead of exploring design patterns as a whole. Instead of contrived code samples and complicated diagrams, this talk uses natural language and real-world examples to engage developers of all skill levels in a discussion on how to think about design patterns. The unique perspective encourages attendees to apply critical thinking when learning, choosing and implementing design patterns while the examples and anecdotes give them the techniques they can use to be successful at it.<br /><br />
        </div>

        <div id="the-wordpress-rest-api" style="text-align: justify;">
            <hr />

            <h2>The WordPress REST API</h2>

            <a href="/speakers#david-bisset" title="Speaker: David Bisset">David Bisset</a><br /><br />

            This talk is all about the WordPress REST API and will introduce you to the current state of the API (which by the time this talk is given in February should already be incorporated into WordPress). The talk will start off outlining the basics of the API and show you how you can start using it. The talk will then go on to discuss the future of the API and then show how it can be used to create some unique themes and applications.<br /><br />

            The overall gist of the talk is to demonstrate how easy the API is to work with but also give guidance to developers how they can customize it. If you have to pick a talk level it would be probably easy or mid level... therefore even if you don't know much about APIs you should be able to walk out with some knowledge. Advanced developers would probably get more at the end of the talk.<br /><br />

            The REST API is going to be one of the most exciting additions to WordPress Core for a long time, and it's going to be exciting to share.<br /><br />
        </div>

        <div id="web-security-and-you" style="text-align: justify;">
            <hr />

            <h2>Web Security and You</h2>

            <a href="/speakers#eli-white" title="Speaker: Eli White">Eli White</a><br /><br />

            This talk will focus on XSS, CSRF, Session Hijacking, SQL Injection, and other security vulnerabilities that need addressed in Website Development. This talk will cover a gambit of these issues, giving specific code examples showing what the vulnerabilities look like and how to identify them. It will then present solutions to close them down and protect yourself.<br /><br />
        </div>

        <div id="what-they-should-tell-you-about-api-development" style="text-align: justify;">
            <hr />

            <h2>What They Should Tell You About API Development</h2>

            <a href="/speakers#phil-sturgeon" title="Speaker: Phil Sturgeon">Phil Sturgeon</a><br /><br />

            As a refinement to his previously published book, the author of "Building APIs You Won't Hate" found that API books and training tend to introduce documentation, testing and caching as an after-thought, as if these are not important. However, some new experiences have shown that API development works best when these items are thought out first, as well as including a strong pragmatic approach to ensure the API solves real problems without getting stuck on the theory of how to "properly" create it.<br /><br />

            Other pragmatic talking points include: Why and how documentation first can stop your team(s) from getting violent, when is REST not what you want, why is hypermedia sometimes a distraction, convenient ways to avoid versions in your API or at least postpone it, and comprehensive but simple endpoint integration testing beyond trivial examples.<br /><br />
        </div>

        <div id="you-can-ux-too-avoiding-the-programmers-user-interface" style="text-align: justify;">
            <hr />

            <h2>You Can UX Too: Avoiding the Programmer's User Interface</h2>

            <a href="/speakers#eryn-o-neil" title="Speaker: Eryn O'Neil">Eryn O'Neil</a><br /><br />

            Programmers have a bad reputation when it comes to UX, but it's time to set the record straight: It isn't because we don't care! It's because we fall in the trap of thinking we can design a user interface and write it at the same time when, the truth is, these processes require different kinds of thinking. But learning how to unlock that part of your brain is worth it - and you'll be surprised at what you already know. From one developer to another, this talk will discuss why you should think critically about the interfaces you write and give you some strategies you can start applying right away, whether you're implementing on your own or working with a UX professional.<br /><br />

            This talk is aimed at developers, both front-end and server-side, who implement user interfaces but may not have training in UX. Because really, ALL programmers implement user interfaces. Sometimes the user is another developer (in the case of an API) or a more advanced user (for a command-line tool), but don't kid yourself: all software has users.<br /><br />
        </div>

        <hr />
    </div>
</div>